// Build file for MCF as part of OpenESP
def fullName = "apache-manifoldcf-${mcfVersion}"
def zipName = "${fullName}-bin.zip"
def guideName = "end-user-documentation.pdf"
def binUrl = "$apacheMirrorBase/manifoldcf/${fullName}/${zipName}"
def guideUrl = "http://manifoldcf.apache.org/release/trunk/en_US/${guideName}"
def buildDir = 'build'
def zipPath = "${tmpDir}/${zipName}"
def guidePath = "${tmpDir}/${guideName}"
def unzippedPath = "${buildDir}/${fullName}"
def deployDir = "${buildDir}/openesp"

defaultTasks 'organizeForOpenESP' 

task clean {
	doLast {
		delete buildDir
	} 
}

task init {
	outputs.dir buildDir
	doLast {
		mkdir buildDir
	}
}

task getMcf (dependsOn: 'init') {
	outputs.file file(zipPath)
	doLast {
    println "Downloading MCF from ${binUrl} into ${tmpDir}"
		ant {
			get src:binUrl,
			dest:tmpDir, verbose:"true"
		}
	}
}

task getGuide (dependsOn: 'init') {
	outputs.file file(guidePath)
	doLast {
    println "Downloading MCF End User Guide from ${guideUrl} into ${tmpDir}"
		ant {
			get src:guideUrl,
			dest:tmpDir, verbose:"true"
		}
	}
}

task unpackMcf (dependsOn: 'getMcf') {
//	outputs.file "${unzippedPath}/README.txt"
	doLast {
    println "Unpacking Mcf into ${buildDir}"
		copy {
			from zipTree(zipPath)
			into "${buildDir}"
		}
	}
}

task organizeForOpenESP (dependsOn: ['unpackMcf','getGuide']) {
	outputs.file "${deployDir}/tomcat/conf/Catalina/localhost/mcf.xml_disabled"
	outputs.file "${deployDir}/doc/${mcfGuideName}"
  def warPath = "${unzippedPath}/web/war"
	doLast {
		copy {
			from warPath
			into "${deployDir}/webapps"
		}
		copy {
			from 'tomcat-contexts'
			include 'mcf.xml'
			into "${deployDir}/tomcat/conf/Catalina/localhost"
			// Let the default for MCF be disabled
			rename ("mcf.xml", "mcf.xml_disabled")
		}
		copy {
			from 'conf'
//			filter(ReplaceTokens, tokens: [openesp_home: ])
			into "${deployDir}/conf/mcf"
		}
		copy {
			from "${unzippedPath}/connector-lib"
			into "${deployDir}/lib/mcf"
		}
		copy {
			from "${unzippedPath}/connector-lib-proprietary"
			into "${deployDir}/lib/mcf"
		}
		copy {
			from "${unzippedPath}/example/lib"
			exclude 'jetty*'
			into "${deployDir}/lib/mcf"
		}
		copy {
			from "${unzippedPath}/connectors.xml" 
			into "${deployDir}/conf/mcf"
		}
		copy {
			from "${unzippedPath}/solr-integration/solr-4.x"
			into "${deployDir}/lib/solr"
		}
		copy {
			from "${guidePath}"
			into "${deployDir}/doc"
			rename (guideName, mcfGuideName)
		}
		new File("${deployDir}/logs/mcf").mkdirs()
	}
}